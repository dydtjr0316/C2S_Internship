<<오늘 진행 사항>>
1. 캐릭터, 맵, UI 리소스 검색 및 게임 방향성 회의
2. 창주님과 Dynamic AABB Tree를 통한 시야처리 알고리즘 분석
3. SIMD 구현 및 성능테스트
4. 실장님과 인턴 면담


----------------------------------
<<피드백>>
1. 리소스같은 경우에는 유/무료를 따지지 않았음에도 퀄리티 있는 리소스를 찾기 힘들었을뿐더러 
	캐릭터, 맵, ui 리소스의 분위기가 비슷한 것을 찾기 쉽지 않았다.

2. AABB의 최악/최선의 성능차를 줄이기 위한 방법에 대해 생각하지 못했다
	+실장님께 여쭤보고난 다음에 추가작성

3. 시간관계상 구현되어있는  SIMD 코드에 SISD코드를 추가하여 성능 측정을 했을 뿐 내부적으로 
	SIMD로 동작하는지에 대한 공부가 없었다.
	
	그리고 애초에 시야처리를 위한 연산에는 +연산만 들어가는게 아니라 *연산까지 쓰여야 하므로
	구현에는 추가적인 시간이 더 많이 들지 않을까 생각한다.

	자료형으로 int를 썼다는 것도 문제
`	-- 
	float형으로 구현해 봤으나 문제가 많아 보류
+++++++++++++++++simd문제++++++++++++++++++++++++++
우선 Vector2를 가지고 simd 연산을 하는 법을 찾아보거나

배열의 길이가 8이하일때 돌아가지 않는 문제를 해결해야하는데

결론적으로는 simd연산을 좀더 유연하게 할 방법이 없다면 

---------------------------------------------------------------------------------------------------

점과점사이의 거리 연산에서는 simd 성능이 떨어진다.(1000000번 연산 기준 대략 20배 정도)

성능 뿐 아니라 배열을 생성하면서 메모리 낭비도 심하다.

BUT 
합연산에 있어서는 평균 적으로 3배정도 simd가 빨랐다.
+++++++++++++++++++++++++++++++++++++++++++


----------------------------------
<<내일 할 일>>
1. AABB의 최악/최선의 성능차를 줄이기 위한 방법에 대해 생각하지 못한 것 실장님께 여쭤보고
	피드백 받기

2. 게임의 기획적인 부분에 있어서 요즘 게임들은 하나의 월드에 그렇게 많은 유저가 접속해있지 않게 되는데 
	시야처리를 좀 더 효율적으로 사용하기 위해선 오픈월드 까진 아니여도 하나의 월드가 굉장히 크게
	설계되어야 하지 않나 싶은데 여쭤보기

3. SIMD 제대로 구현해서 성능 체크 해보고 리스트 작성하기

4. ***실장님과 리소스에 대한 부분 최종적으로 끝내기

5. ***************출근 못찍어서 정정신청드렸다고 말씁드리기



----------------------------------